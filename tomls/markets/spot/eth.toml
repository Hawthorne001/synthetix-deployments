include = [
  "../spot-factory.toml",

  # TODO: this is a funny necessary dependency because the oracle manager is registering the same node twice
  # however, it will not emit "NodeRegistered" the second time because its an unnecessary call
  "../../oracles/eth.toml"
]

[invoke.createEthSynth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "owner"
func = "createSynth"
args = ["Synthetic Ethereum", "snxETH", "<%= settings.owner %>"]

extra.synth_eth_market_id.event = "SynthRegistered"
extra.synth_eth_market_id.arg = 0

depends = ["provision.spotFactory"]

[invoke.setSynthPriceEth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_eth_market_id %>"]

func = "updatePriceData"
args = [
  "<%= extras.synth_eth_market_id %>", 
  "<%= extras.eth_oracle_id %>", 
  "<%= extras.eth_oracle_id %>"
]

depends = ["invoke.createEthSynth", "invoke.registerEthOracleManager"]